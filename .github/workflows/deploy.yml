name: Deploy to EC2  # 워크플로 이름

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 이 워크플로가 실행됩니다.

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions가 사용할 OS 환경입니다.

    steps:
    - name: Checkout code  # 1단계: 코드 체크아웃
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx  # 2단계: Docker 빌드 환경 설정
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub  # 3단계: Docker Hub에 로그인
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image  # 4단계: Docker 이미지 빌드 및 푸시
      run: |
        docker build -t my-app:${{ github.sha }} .  # 로컬에서 Docker 이미지 빌드
        docker tag my-app:${{ github.sha }} my-dockerhub-username/my-app:${{ github.sha }}  # Docker Hub에 태그 추가
        docker push my-dockerhub-username/my-app:${{ github.sha }}  # Docker Hub에 푸시

    - name: Deploy to EC2  # 5단계: EC2에 배포
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          docker pull my-dockerhub-username/my-app:${{ github.sha }}  # Docker Hub에서 최신 이미지 풀
          docker stop my-app || true  # 기존 컨테이너 중지
          docker rm my-app || true  # 기존 컨테이너 삭제
          docker run -d --name my-app -p 80:80 my-dockerhub-username/my-app:${{ github.sha }}  # 새 컨테이너 실행
