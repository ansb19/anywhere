name: CI/CD Pipeline to AWS EC2 with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 워크플로우가 실행됩니다.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          echo DB_TYPE=${{ secrets.DB_TYPE }} >> .env
          echo DB_HOST_NAME=${{ secrets.DB_HOST_NAME }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_USER_NAME=${{ secrets.DB_USER_NAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo FRONT_END_API=${{ secrets.FRONT_END_API }} >> .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
          echo KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }} >> .env
          echo KAKAO_JAVASCRIPT_KEY=${{ secrets.KAKAO_JAVASCRIPT_KEY }} >> .env
          echo KAKAO_REDIRECT_URI_DEV=${{ secrets.KAKAO_REDIRECT_URI_DEV }} >> .env
          echo KAKAO_REDIRECT_URI_PRO=${{ secrets.KAKAO_REDIRECT_URI_PRO }} >> .env
          echo KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} >> .env
          
          echo KAKAO_DEV_REST_API_KEY=${{ secrets.KAKAO_DEV_REST_API_KEY }} >> .env
          echo KAKAO_DEV_JAVASCRIPT_KEY=${{ secrets.KAKAO_DEV_JAVASCRIPT_KEY }} >> .env
          echo KAKAO_DEV_REDIRECT_URI_DEV=${{ secrets.KAKAO_DEV_REDIRECT_URI_DEV }} >> .env
          echo KAKAO_DEV_REDIRECT_URI_PRO=${{ secrets.KAKAO_DEV_REDIRECT_URI_PRO }} >> .env
          echo KAKAO_DEV_CLIENT_SECRET=${{ secrets.KAKAO_DEV_CLIENT_SECRET }} >> .env


      # 2. Docker 로그인 (Docker Hub 사용 시)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          docker build -t ansb19/anywhere:latest .
          docker push ansb19/anywhere:latest
          

      # 4. AWS 서버에 배포
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 기존 컨테이너 중지 및 삭제
            docker stop anywhere || true
            docker rm anywhere || true

            # 최신 이미지 Pull
            docker pull ansb19/anywhere:latest

            # 새로운 컨테이너 실행
            docker run -d -p 80:80 --name anywhere ansb19/anywhere:latest
