name: CI/CD Pipeline to AWS EC2 with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 워크플로우가 실행됩니다.

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. .env 파일 생성 // docker- compose.yml에 등록해서 필요 없어짐
      


      # 3. Docker 로그인 (Docker Hub 사용 시)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          docker build -t ansb19/anywhere:latest .
          docker push ansb19/anywhere:latest
          
      # 5. docker-compose.yml 파일 전송
      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./docker-compose.yml
          target: /home/ec2-user/docker-compose.yml

      # 5. AWS EC2에서 Docker Compose  docker-compose.yml로 디렉토리도 생성됨..
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user/docker-compose.yml/

            
            docker ps -q --filter "name=anywhere" | grep -q . && docker stop anywhere && \
            docker rm anywhere || true

            docker network prune -f || true

            docker-compose down || true
            docker-compose pull
            docker-compose up -d
